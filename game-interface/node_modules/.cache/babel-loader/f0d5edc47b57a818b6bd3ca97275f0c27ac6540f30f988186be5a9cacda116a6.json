{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcos\\\\Downloads\\\\T2-IA\\\\game-interface\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [trainingStatus, setTrainingStatus] = useState('Not Started');\n  const [gameState, setGameState] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const startTraining = async () => {\n    try {\n      setTrainingStatus('In Progress...');\n      await axios.post('http://localhost:5000/train');\n      setTrainingStatus('Completed');\n    } catch (error) {\n      console.error('Error starting training:', error);\n      setTrainingStatus('Error');\n    }\n  };\n  const makeMove = async index => {\n    // Verifica se a casa está ocupada ou se o treinamento não foi concluído\n    if (board[index] || trainingStatus !== 'Completed' || currentPlayer !== 'X') return;\n    const newBoard = [...board];\n    newBoard[index] = 'X'; // Movimento do jogador\n    setBoard(newBoard);\n    try {\n      // Envia o tabuleiro atualizado para o backend\n      const response = await axios.post('http://localhost:5000/simulate', {\n        board: newBoard\n      });\n      const {\n        board: updatedBoard,\n        message\n      } = response.data;\n      setBoard(updatedBoard); // Atualiza o tabuleiro com o movimento da rede neural\n      setGameState({\n        message,\n        board: updatedBoard\n      });\n\n      // Verifica o estado do jogo\n      if (!message.includes('continua')) {\n        // Fim do jogo\n        setCurrentPlayer(null);\n      } else {\n        setCurrentPlayer('X'); // Passa a vez para o jogador\n      }\n    } catch (error) {\n      console.error('Error simulating move:', error);\n    }\n  };\n  const renderSquare = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => makeMove(index),\n      style: {\n        width: '60px',\n        height: '60px',\n        display: 'inline-block',\n        margin: '5px',\n        fontSize: '24px',\n        textAlign: 'center',\n        lineHeight: '60px'\n      },\n      children: board[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Neural Network Training and Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Train Neural Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: startTraining,\n        children: \"Start Training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", trainingStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), trainingStatus === 'Completed' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gap: '5px'\n          },\n          children: Array.from({\n            length: 9\n          }).map((_, index) => renderSquare(index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), gameState && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameState.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please train the neural network before playing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"InQosBHk7We6lgv4Q31ABcZ8b54=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","trainingStatus","setTrainingStatus","gameState","setGameState","currentPlayer","setCurrentPlayer","board","setBoard","Array","fill","startTraining","post","error","console","makeMove","index","newBoard","response","updatedBoard","message","data","includes","renderSquare","className","onClick","style","width","height","display","margin","fontSize","textAlign","lineHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","from","length","map","_","_c","$RefreshReg$"],"sources":["C:/Users/Marcos/Downloads/T2-IA/game-interface/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [trainingStatus, setTrainingStatus] = useState('Not Started');\n\n  interface GameState {\n    message: string;\n    board: string[]; // Atualização do tabuleiro após o movimento da rede neural\n  }\n\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [board, setBoard] = useState(Array(9).fill(null));\n\n  const startTraining = async () => {\n    try {\n      setTrainingStatus('In Progress...');\n      await axios.post('http://localhost:5000/train');\n      setTrainingStatus('Completed');\n    } catch (error) {\n      console.error('Error starting training:', error);\n      setTrainingStatus('Error');\n    }\n  };\n\n  const makeMove = async (index: number) => {\n    // Verifica se a casa está ocupada ou se o treinamento não foi concluído\n    if (board[index] || trainingStatus !== 'Completed' || currentPlayer !== 'X') return;\n\n    const newBoard = [...board];\n    newBoard[index] = 'X'; // Movimento do jogador\n    setBoard(newBoard);\n\n    try {\n      // Envia o tabuleiro atualizado para o backend\n      const response = await axios.post('http://localhost:5000/simulate', { board: newBoard });\n      const { board: updatedBoard, message } = response.data;\n\n      setBoard(updatedBoard); // Atualiza o tabuleiro com o movimento da rede neural\n      setGameState({ message, board: updatedBoard });\n\n      // Verifica o estado do jogo\n      if (!message.includes('continua')) {\n        // Fim do jogo\n        setCurrentPlayer(null);\n      } else {\n        setCurrentPlayer('X'); // Passa a vez para o jogador\n      }\n    } catch (error) {\n      console.error('Error simulating move:', error);\n    }\n  };\n\n  const renderSquare = (index: number) => {\n    return (\n      <button\n        className=\"square\"\n        onClick={() => makeMove(index)}\n        style={{\n          width: '60px',\n          height: '60px',\n          display: 'inline-block',\n          margin: '5px',\n          fontSize: '24px',\n          textAlign: 'center',\n          lineHeight: '60px',\n        }}\n      >\n        {board[index]}\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Neural Network Training and Game</h1>\n\n      <div className=\"mb-4\">\n        <h2>Train Neural Network</h2>\n        <button className=\"btn btn-primary\" onClick={startTraining}>\n          Start Training\n        </button>\n        <p>Status: {trainingStatus}</p>\n      </div>\n\n      <div>\n        <h2>Game</h2>\n        {trainingStatus === 'Completed' ? (\n          <div style={{ display: 'inline-block', margin: '10px' }}>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '5px' }}>\n              {Array.from({ length: 9 }).map((_, index) => renderSquare(index))}\n            </div>\n            {gameState && <p>{gameState.message}</p>}\n          </div>\n        ) : (\n          <p>Please train the neural network before playing.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}