{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcos\\\\Downloads\\\\T2-IA\\\\game-interface\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // External CSS for custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [trainingStatus, setTrainingStatus] = useState('Not Started');\n  const [gameState, setGameState] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const startTraining = async () => {\n    try {\n      setTrainingStatus('In Progress...');\n      await axios.post('http://localhost:5000/train');\n      setTrainingStatus('Completed');\n    } catch (error) {\n      console.error('Error starting training:', error);\n      setTrainingStatus('Error');\n    }\n  };\n  const makeMove = async index => {\n    if (board[index] || trainingStatus !== 'Completed' || currentPlayer !== 'X') return;\n    const newBoard = [...board];\n    newBoard[index] = 'X';\n    setBoard(newBoard);\n    try {\n      const response = await axios.post('http://localhost:5000/simulate', {\n        board: newBoard\n      });\n      const {\n        board: updatedBoard,\n        message\n      } = response.data;\n      setBoard(updatedBoard);\n      setGameState({\n        message,\n        board: updatedBoard\n      });\n      if (!message.includes('continua')) {\n        setCurrentPlayer(null);\n      } else {\n        setCurrentPlayer('X');\n      }\n    } catch (error) {\n      console.error('Error simulating move:', error);\n    }\n  };\n  const renderSquare = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square btn btn-light\",\n      onClick: () => makeMove(index),\n      style: {\n        fontSize: '30px',\n        lineHeight: '60px',\n        cursor: trainingStatus === 'Completed' ? 'pointer' : 'not-allowed',\n        backgroundColor: trainingStatus === 'Completed' ? '#f8f9fa' : '#e9ecef'\n      },\n      disabled: !!board[index] || trainingStatus !== 'Completed',\n      children: board[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 d-flex justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: \"Neural Network Training and Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3\",\n          children: \"Train Neural Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg\",\n          onClick: startTraining,\n          children: \"Start Training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: [\"Status: \", trainingStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3\",\n          children: \"Tic-Tac-Toe Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-board\",\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(3, 1fr)',\n              gap: '5px',\n              marginBottom: '15px'\n            },\n            children: Array.from({\n              length: 9\n            }).map((_, index) => renderSquare(index))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), gameState && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"game-message\",\n            children: gameState.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), trainingStatus !== 'Completed' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: \"Please train the neural network before playing.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"InQosBHk7We6lgv4Q31ABcZ8b54=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","trainingStatus","setTrainingStatus","gameState","setGameState","currentPlayer","setCurrentPlayer","board","setBoard","Array","fill","startTraining","post","error","console","makeMove","index","newBoard","response","updatedBoard","message","data","includes","renderSquare","className","onClick","style","fontSize","lineHeight","cursor","backgroundColor","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginBottom","from","length","map","_","_c","$RefreshReg$"],"sources":["C:/Users/Marcos/Downloads/T2-IA/game-interface/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // External CSS for custom styles\n\nconst App = () => {\n  const [trainingStatus, setTrainingStatus] = useState('Not Started');\n\n  interface GameState {\n    message: string;\n    board: string[];\n  }\n\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [currentPlayer, setCurrentPlayer] = useState<string | null>('X');\n  const [board, setBoard] = useState(Array(9).fill(null));\n\n  const startTraining = async () => {\n    try {\n      setTrainingStatus('In Progress...');\n      await axios.post('http://localhost:5000/train');\n      setTrainingStatus('Completed');\n    } catch (error) {\n      console.error('Error starting training:', error);\n      setTrainingStatus('Error');\n    }\n  };\n\n  const makeMove = async (index: number) => {\n    if (board[index] || trainingStatus !== 'Completed' || currentPlayer !== 'X') return;\n\n    const newBoard = [...board];\n    newBoard[index] = 'X';\n    setBoard(newBoard);\n\n    try {\n      const response = await axios.post('http://localhost:5000/simulate', { board: newBoard });\n      const { board: updatedBoard, message } = response.data;\n\n      setBoard(updatedBoard);\n      setGameState({ message, board: updatedBoard });\n\n      if (!message.includes('continua')) {\n        setCurrentPlayer(null);\n      } else {\n        setCurrentPlayer('X');\n      }\n    } catch (error) {\n      console.error('Error simulating move:', error);\n    }\n  };\n\n  const renderSquare = (index: number) => {\n    return (\n      <button\n        className=\"square btn btn-light\"\n        onClick={() => makeMove(index)}\n        style={{\n          fontSize: '30px',\n          lineHeight: '60px',\n          cursor: trainingStatus === 'Completed' ? 'pointer' : 'not-allowed',\n          backgroundColor: trainingStatus === 'Completed' ? '#f8f9fa' : '#e9ecef',\n        }}\n        disabled={!!board[index] || trainingStatus !== 'Completed'}\n      >\n        {board[index]}\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"container mt-5 d-flex justify-content-center align-items-center\">\n      <div className=\"text-center\">\n        <h1 className=\"mb-4\">Neural Network Training and Game</h1>\n\n        {/* Training Section */}\n        <div className=\"mb-4\">\n          <h2 className=\"mb-3\">Train Neural Network</h2>\n          <button className=\"btn btn-primary btn-lg\" onClick={startTraining}>\n            Start Training\n          </button>\n          <p className=\"mt-2\">Status: {trainingStatus}</p>\n        </div>\n\n        {/* Game Section */}\n        <div>\n          <h2 className=\"mb-3\">Tic-Tac-Toe Game</h2>\n          <div style={{ display: 'inline-block' }}>\n            <div\n              className=\"game-board\"\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(3, 1fr)',\n                gap: '5px',\n                marginBottom: '15px',\n              }}\n            >\n              {Array.from({ length: 9 }).map((_, index) => renderSquare(index))}\n            </div>\n            {gameState && <p className=\"game-message\">{gameState.message}</p>}\n          </div>\n          {trainingStatus !== 'Completed' && (\n            <p className=\"text-danger\">Please train the neural network before playing.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,aAAa,CAAC;EAOnE,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAmB,IAAI,CAAC;EAClE,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAgB,GAAG,CAAC;EACtE,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACc,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAEvD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFT,iBAAiB,CAAC,gBAAgB,CAAC;MACnC,MAAMN,KAAK,CAACgB,IAAI,CAAC,6BAA6B,CAAC;MAC/CV,iBAAiB,CAAC,WAAW,CAAC;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDX,iBAAiB,CAAC,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMa,QAAQ,GAAG,MAAOC,KAAa,IAAK;IACxC,IAAIT,KAAK,CAACS,KAAK,CAAC,IAAIf,cAAc,KAAK,WAAW,IAAII,aAAa,KAAK,GAAG,EAAE;IAE7E,MAAMY,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC3BU,QAAQ,CAACD,KAAK,CAAC,GAAG,GAAG;IACrBR,QAAQ,CAACS,QAAQ,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACgB,IAAI,CAAC,gCAAgC,EAAE;QAAEL,KAAK,EAAEU;MAAS,CAAC,CAAC;MACxF,MAAM;QAAEV,KAAK,EAAEY,YAAY;QAAEC;MAAQ,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAEtDb,QAAQ,CAACW,YAAY,CAAC;MACtBf,YAAY,CAAC;QAAEgB,OAAO;QAAEb,KAAK,EAAEY;MAAa,CAAC,CAAC;MAE9C,IAAI,CAACC,OAAO,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;QACjChB,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACLA,gBAAgB,CAAC,GAAG,CAAC;MACvB;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMU,YAAY,GAAIP,KAAa,IAAK;IACtC,oBACElB,OAAA;MACE0B,SAAS,EAAC,sBAAsB;MAChCC,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACC,KAAK,CAAE;MAC/BU,KAAK,EAAE;QACLC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,MAAM;QAClBC,MAAM,EAAE5B,cAAc,KAAK,WAAW,GAAG,SAAS,GAAG,aAAa;QAClE6B,eAAe,EAAE7B,cAAc,KAAK,WAAW,GAAG,SAAS,GAAG;MAChE,CAAE;MACF8B,QAAQ,EAAE,CAAC,CAACxB,KAAK,CAACS,KAAK,CAAC,IAAIf,cAAc,KAAK,WAAY;MAAA+B,QAAA,EAE1DzB,KAAK,CAACS,KAAK;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEb,CAAC;EAED,oBACEtC,OAAA;IAAK0B,SAAS,EAAC,iEAAiE;IAAAQ,QAAA,eAC9ElC,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAQ,QAAA,gBAC1BlC,OAAA;QAAI0B,SAAS,EAAC,MAAM;QAAAQ,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAG1DtC,OAAA;QAAK0B,SAAS,EAAC,MAAM;QAAAQ,QAAA,gBACnBlC,OAAA;UAAI0B,SAAS,EAAC,MAAM;UAAAQ,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CtC,OAAA;UAAQ0B,SAAS,EAAC,wBAAwB;UAACC,OAAO,EAAEd,aAAc;UAAAqB,QAAA,EAAC;QAEnE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtC,OAAA;UAAG0B,SAAS,EAAC,MAAM;UAAAQ,QAAA,GAAC,UAAQ,EAAC/B,cAAc;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eAGNtC,OAAA;QAAAkC,QAAA,gBACElC,OAAA;UAAI0B,SAAS,EAAC,MAAM;UAAAQ,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CtC,OAAA;UAAK4B,KAAK,EAAE;YAAEW,OAAO,EAAE;UAAe,CAAE;UAAAL,QAAA,gBACtClC,OAAA;YACE0B,SAAS,EAAC,YAAY;YACtBE,KAAK,EAAE;cACLW,OAAO,EAAE,MAAM;cACfC,mBAAmB,EAAE,gBAAgB;cACrCC,GAAG,EAAE,KAAK;cACVC,YAAY,EAAE;YAChB,CAAE;YAAAR,QAAA,EAEDvB,KAAK,CAACgC,IAAI,CAAC;cAAEC,MAAM,EAAE;YAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAE5B,KAAK,KAAKO,YAAY,CAACP,KAAK,CAAC;UAAC;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,EACLjC,SAAS,iBAAIL,OAAA;YAAG0B,SAAS,EAAC,cAAc;YAAAQ,QAAA,EAAE7B,SAAS,CAACiB;UAAO;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,EACLnC,cAAc,KAAK,WAAW,iBAC7BH,OAAA;UAAG0B,SAAS,EAAC,aAAa;UAAAQ,QAAA,EAAC;QAA+C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC9E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAvGID,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AAyGT,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}